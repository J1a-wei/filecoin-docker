#!/usr/bin/env bash

. /etc/lotus/docker/bash-config

prepare_config

if [[ -z "$IMPORT" ]]
then
  echo "IMPORT not defined. Please setting up ..."
elif [ "$IMPORT" = true ]; then
  echo "Starting import wait"
  CHAIN_CAR="/chain/chain.car"
  if [ -f "$CHAIN_CAR" ] && [ ! -e "/root/.lotus/datastore" ]; then
    /usr/local/bin/lotus daemon --halt-after-import --import-chain "$CHAIN_CAR"
    touch /root/.lotus/import-complete
  fi
elif [ "$IMPORT" = false ]; then
  echo "IMPORT disabled."
fi

if [[ -z "$IMPORT_SNAPSHOT_FROM_IPFS" ]]
then
  echo "IMPORT_SNAPSHOT_FROM_IPFS not defined. Please setting up ..."
elif [ "$IMPORT_SNAPSHOT_FROM_IPFS" = true ]; then
  echo "Fetching IPFS CID..."
  CID=$(curl $SNAPSHOT_CID)
  echo "Fetched. CID is $CID"
  SNAPSHOTURL="$IPFS_GW/$CID"
  echo "Full URL to snapshot is $SNAPSHOTURL"
  IMPORT_SNAPSHOT=true
elif [ "$IMPORT_SNAPSHOT_FROM_IPFS" = false ]; then
  echo "IMPORT_SNAPSHOT_FROM_IPFS disabled."
fi

if [ "$IMPORT_SNAPSHOT" = true ] ; then
    echo "Starting import wait"
    if [ ! -e "/root/.lotus/datastore" ]; then
      /usr/local/bin/lotus daemon --halt-after-import --import-snapshot $SNAPSHOTURL
      touch /root/.lotus/import-complete
      else
        rm -fr ~/.lotus/datastore/chain/*
        /usr/local/bin/lotus daemon --halt-after-import --import-snapshot $SNAPSHOTURL
        touch /root/.lotus/import-complete
    fi
elif [ "$IMPORT_SNAPSHOT" = false ] ; then
  echo "IMPORT_SNAPSHOT disabled."
fi

if [[ -z "$SYNC" ]]
then
  echo "SYNC not defined. Please setting up ..."
elif [ "$SYNC" = true ]; then
  echo "Starting sync wait"
  # Start the daemon process and put it in the background
# /usr/local/bin/lotus daemon &
  # Run the sync process until it dies
  lotus sync wait
elif [ "$SYNC" = false ]; then
  echo "SYNC disabled."
fi


if [[ -z "$CHAINWATCH" ]]
then
  echo "CHAINWATCH not defined. Please setting up ..."
elif [ "$CHAINWATCH" = true ]; then
  echo "Starting chainwatch"
  # Start the daemon process and put it in the background
  /usr/local/bin/lotus daemon &
  # wait until we are sure daemon is up (chainwatch will fail if daemon is not running and return 0 even when failing so repeat is not working)
  sleep 120
  # Start the chainwatch process
  repeat chainwatch run
elif [ "$CHAINWATCH" = false ]; then
  echo "CHAINWATCH disabled."
fi

if [[ -z "$SHEDEXPORT" ]]
then
  echo "SHEDEXPORT not defined. Please setting up ..."
elif [ "$CHAINWATCH" = true ]; then
  while true; do
  echo "Exporting state"
  /usr/local/bin/lotus-shed export --skip-old-msgs --recent-stateroots=900 $SHEDEXPORTPATH
  timeout $SHEDEXPORTPERIOD /usr/local/bin/lotus daemon
  done
elif [ "$SHEDEXPORT" = false ]; then
  echo "SHEDEXPORT disabled."
fi