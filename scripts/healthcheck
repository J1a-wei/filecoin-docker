#!/bin/bash -e
#this script compares block on api.filscan and on nodes and checks if lotus sync status isn't error
#if api.filscan unavailable, it will compare with block on node which has higher block from several nodes.

### READ THE LIST OF THE NODES FROM THE GITHUB. If no list - default list will be used
readarray -t NODES < <(curl -sfk --max-time 3 $HEALTH_CHECK_GIST)
if [ ${#errors[@]} -eq 0 ]; then
  NODES=(space00 space01 space07 space09 space11 api-read)
fi

# Set allowed number of block node can have a delay of
ALLOWED_DELAY=10
# Set a helper variables
re='^[0-9]+$'

# If Lotus tells there is an error - throw error
if [[ -n $(lotus sync status | grep "Stage: error") ]]
    then exit 1
else
    FILSCAN_BLOCK=$(curl -kfs --header "Content-Type: application/json" --request POST --max-time 3 --data '{"id": 1, "jsonrpc": "2.0", "method": "filscan.StatChainInfo"}' https://api.filscan.io:8700/rpc/v1 | jq -r '.result.data.latest_height')
    OUR_BLOCK=$(curl -s --max-time 3 localhost:1234/debug/metrics | grep ^lotus_chain_node_worker_height | awk '{print $2}')
    OTHER_KNOWN_BLOCKS=$(for i in "${NODES[@]}"; do curl -sk --max-time 3 http://${i}-lotus-service:1234/debug/metrics | grep ^lotus_chain_node_height | awk '{print $2}'; done)
    if [ -z ${OTHER_KNOWN_BLOCKS[@]}]; then
        OTHER_KNOWN_BLOCKS_COUNT=0
    else
	OTHER_KNOWN_BLOCKS_COUNT=${#OTHER_KNOWN_BLOCKS[@]}
    fi

    SUM_OF_BLOCKS=0
    for i in "${NODES[@]}"; do
        SUM_OF_BLOCKS=$(($TEMP_TOTAL+$i))
    done

# If there Filscan available - add it's data and make it to have a 10 time more priority

    if [[ $FILSCAN_BLOCK =~ $re ]]; then
        AVERAGE_BLOCK=$((($SUM_OF_BLOCKS+10*$FILSCAN_BLOCK)/($OTHER_KNOWN_BLOCKS_COUNT+10)))
        MIN_ALLOWED_BLOCK=$(($AVERAGE_BLOCK-$ALLOWED_DELAY))       
    else 
	AVERAGE_BLOCK=$(($SUM_OF_BLOCKS/$OTHER_KNOWN_BLOCKS_COUNT))
        MIN_ALLOWED_BLOCK=$(($AVERAGE_BLOCK-$ALLOWED_DELAY))
    fi

# If local block is lower than minimum allowed block - the health is bad
    if [[ $OUR_BLOCK -ge $MIN_ALLOWED_BLOCK ]]; then
        exit 0
    else 
        exit 1
    fi
fi
